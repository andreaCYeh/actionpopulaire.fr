# Generated by Django 3.1.12 on 2021-06-29 12:45

from django.db import migrations, models


def professional_type_to_subtype(apps, schema_editor):
    SupportGroupSubtype = apps.get_model("groups", "SupportGroupSubtype")
    SupportGroup = apps.get_model("groups", "SupportGroup")

    # Create a new "professional" subtype of "2022" type
    subtype, created = SupportGroupSubtype.objects.update_or_create(
        label="groupe d'action professionnel",
        defaults={
            "description": "Groupe d'action professionnel",
            "visibility": "A",  # all
            "color": "#f4981e",
            "icon_name": "industry",
            "type": "2",  # campagne 2022
        },
    )
    professional_groups = SupportGroup.objects.filter(type="P")
    professional_groups_pks = []
    # Change "P" type to "2"
    for professional_group in professional_groups:
        professional_groups_pks.append(professional_group.pk)
        professional_group.type = "2"

    SupportGroup.objects.bulk_update(
        [professional_group for professional_group in professional_groups],
        fields=["type"],
    )
    # Add the newly created subtype to former "P"-type groups
    subtype.supportgroups.add(*professional_groups_pks)


class Migration(migrations.Migration):

    dependencies = [
        ("groups", "0002_creer_sous_types"),
    ]

    operations = [
        migrations.RunPython(
            code=professional_type_to_subtype, reverse_code=migrations.RunPython.noop
        ),
        migrations.AlterField(
            model_name="supportgroup",
            name="type",
            field=models.CharField(
                choices=[
                    ("L", "Groupe local"),
                    ("B", "Groupe thématique"),
                    ("F", "Groupe fonctionnel"),
                    ("2", "Groupe d'action"),
                ],
                default="L",
                max_length=1,
                verbose_name="type de groupe",
            ),
        ),
        migrations.AlterField(
            model_name="supportgroupsubtype",
            name="type",
            field=models.CharField(
                choices=[
                    ("L", "Groupe local"),
                    ("B", "Groupe thématique"),
                    ("F", "Groupe fonctionnel"),
                    ("2", "Groupe d'action"),
                ],
                max_length=1,
                verbose_name="type de groupe",
            ),
        ),
    ]
