# Generated by Django 3.2.18 on 2023-03-22 15:27
import datetime

from django.db import migrations, models
import django.utils.timezone

from agir.statistics.utils import get_statistics_querysets


def create_statistics_for_the_current_year(apps, schema_editor):
    AbsoluteStatistics = apps.get_model("statistics", "AbsoluteStatistics")
    today = datetime.date.today()
    date = today.replace(day=1, month=1)
    while date < today:
        kwargs = get_statistics_querysets(date=date, as_kwargs=True)
        AbsoluteStatistics.objects.get_or_create(**kwargs)
        date += datetime.timedelta(days=1)


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AbsoluteStatistics",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        editable=False,
                        verbose_name="date de création",
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        auto_now=True, verbose_name="dernière modification"
                    ),
                ),
                (
                    "date",
                    models.DateField(
                        db_index=True, editable=False, unique=True, verbose_name="Date"
                    ),
                ),
                (
                    "event_count",
                    models.IntegerField(default=0, verbose_name="Événements"),
                ),
                (
                    "local_supportgroup_count",
                    models.IntegerField(
                        default=0, verbose_name="Groupes d'action locaux"
                    ),
                ),
                (
                    "local_certified_supportgroup_count",
                    models.IntegerField(
                        default=0, verbose_name="Groupes d'action locaux certifiés"
                    ),
                ),
                (
                    "political_support_person_count",
                    models.IntegerField(default=0, verbose_name="Inscrits LFI"),
                ),
                (
                    "membership_person_count",
                    models.IntegerField(
                        default=0, verbose_name="Membres de groupe d'action"
                    ),
                ),
                (
                    "lfi_newsletter_subscriber_count",
                    models.IntegerField(
                        default=0,
                        verbose_name="Inscriptions à la lettre d'information LFI",
                    ),
                ),
                (
                    "sent_campaign_count",
                    models.IntegerField(
                        default=0, verbose_name="Campagnes e-mail envoyées"
                    ),
                ),
                (
                    "sent_campaign_email_count",
                    models.IntegerField(default=0, verbose_name="E-mails envoyés"),
                ),
            ],
            options={
                "verbose_name": "statistique absolue",
                "verbose_name_plural": "statistiques absolues",
                "ordering": ("-date",),
                "get_latest_by": "-date",
            },
        ),
        migrations.RunPython(
            create_statistics_for_the_current_year, migrations.RunPython.noop
        ),
    ]
